[[[id]]]
61861095

[[[name]]]
ZEND_PARSE_PARAMS_THROW

[[[url]]]
zend_parse_params_throw

[[[type]]]
macro

[[[declaration]]]
#define ZEND_PARSE_PARAMS_THROW (1<<2)

[[[parameters]]]

[[[definition]]]

[[[source_location]]]
https://github.com/php/php-src/blob/86dd321c0c14497f1e72e711fbbb157f2fc9b345/Zend/zend_API.h#L277

[[[description]]]
This parameter parsing flag specifies that a `TypeError` exception should be thrown upon failing to parse the given arguments.

See also the [`ZEND_PARSE_PARAMS_QUIET`](https://phpinternals.net/docs/zend_parse_params_quiet) flag.

[[[additional_information]]]
For example, if we want to attempt to parse a [`zend_long`](https://phpinternals.net/docs/zend_long) from a function, and throw an exception if it fails, then we would do:
```c
/* argument information */
ZEND_BEGIN_ARG_INFO_EX(arginfo_parse_long, 0, 0, 1)
	ZEND_ARG_INFO(0, arg)
ZEND_END_ARG_INFO()

/* void parse_long(int $arg) */
PHP_FUNCTION(parse_long)
{
	zend_long arg;

	// new API
	ZEND_PARSE_PARAMETERS_START_EX(ZEND_PARSE_PARAMS_THROW, 1, 1)
		Z_PARAM_LONG(arg)
	ZEND_PARSE_PARAMETERS_END();

	/* old API
	if (zend_parse_parameters_ex(ZEND_PARSE_PARAMS_THROW, ZEND_NUM_ARGS(), "l", &arg) == FAILURE) {
		return;
	}
	// or
	if (zend_parse_parameters_throw(ZEND_NUM_ARGS(), "l", &arg) == FAILURE) {
		return;
	}
	*/

	php_printf("Input: %ld\n", arg);
}
```

Executing the following PHP code:
```php
parse_long(42);
parse_long(INF);
```

Outputs:
```
Input: 42
TypeError: parse_long() expects parameter 1 to be integer, float given in %s:%d
```
