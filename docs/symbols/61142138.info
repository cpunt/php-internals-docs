[[[id]]]
61142138

[[[name]]]
ZVAL_COPY

[[[url]]]
zval_copy

[[[type]]]
macro

[[[declaration]]]
#define ZVAL_COPY(z, v)

[[[parameters]]]
z
A pointer to the new zval to store a copy of the old zval in

v
A pointer to the old zval being copied

[[[definition]]]
#define ZVAL_COPY(z, v)									\
	do {												\
		zval *_z1 = (z);								\
		const zval *_z2 = (v);							\
		zend_refcounted *_gc = Z_COUNTED_P(_z2);		\
		uint32_t _t = Z_TYPE_INFO_P(_z2);				\
		ZVAL_COPY_VALUE_EX(_z1, _z2, _gc, _t);			\
		if ((_t & (IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT)) != 0) { \
			GC_REFCOUNT(_gc)++;							\
		}												\
	} while (0)

[[[source_location]]]
https://github.com/php/php-src/blob/fdfc5c1b3dbc9c8030ff8019ef9bf66d9f46d2d8/Zend/zend_types.h#L927

[[[description]]]
This macro performs a soft copy of a zval, where only the address of the refcounted value and the zval's type is copied. If the zval is a refcounted type (see [`IS_TYPE_REFCOUNTED`](http://phpinternals.net/docs/is_type_refcounted)), then it will have its reference count incremented by one.

This macro is typically used to copy a zval into the `return_value` variable when inside of a `PHP_FUNCTION` or `PHP_METHOD` definition.

[[[additional_information]]]
