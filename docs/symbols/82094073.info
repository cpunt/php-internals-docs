[[[id]]]
82094073

[[[name]]]
ZEND_HASH_FOREACH_BUCKET

[[[url]]]
zend_hash_foreach_bucket

[[[type]]]
macro

[[[declaration]]]
#define ZEND_HASH_FOREACH_BUCKET(ht, _bucket)

[[[parameters]]]
ht
The [`HashTable *`](https://phpinternals.net/docs/hashtable) to iterate through

_bucket
The [`Bucket *`](https://phpinternals.net/docs/zend_long) to store the bucket in

[[[definition]]]
#define ZEND_HASH_FOREACH_BUCKET(ht, _bucket) \
	ZEND_HASH_FOREACH(ht, 0); \
	_bucket = _p;

[[[source_location]]]
https://github.com/php/php-src/blob/b1a8dcc001cdd44afc4529b01ac15a2c6400cbd6/Zend/zend_hash.h#L876

[[[description]]]
Iterates through the buckets of a [`HashTable`](https://phpinternals.net/docs/hashtable).

[[[additional_information]]]
For example:
```c
void output_ht(HashTable *ht)
{
	Bucket *b;

	ZEND_HASH_FOREACH_BUCKET(ht, b) {
		if (b->key) { // string key
			php_printf("%s", ZSTR_VAL(b->key));
		} else { // long key
			php_printf("%d", b->h);
		}

		php_printf(" => ");
		php_debug_zval_dump(&b->val, 0);
	} ZEND_HASH_FOREACH_END();
}
```

Applying the above to the following array:
```php
$a = [0 => 0, "a" => 1];
```

Outputs:
```
0 => int(0)
a => int(1)
```
