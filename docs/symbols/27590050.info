[[[id]]]
27590050

[[[name]]]
Z_ADDREF

[[[url]]]
z_addref

[[[type]]]
macro

[[[declaration]]]
#define Z_ADDREF(z) Z_ADDREF_P(&(z))

[[[parameters]]]
z
The zval to add a reference to

[[[definition]]]
/* Definition for Z_ADDREF_P */
#define Z_ADDREF_P(pz) zval_addref_p(pz)

/* Definition for zval_addref_p */
static zend_always_inline uint32_t zval_addref_p(zval* pz) {
	ZEND_ASSERT(Z_REFCOUNTED_P(pz));
	return ++GC_REFCOUNT(Z_COUNTED_P(pz));
}

[[[source_location]]]
https://github.com/php/php-src/blob/31e4afe3c3654f9c5ab2eafa3a02c62d41c58b47/Zend/zend_types.h#L862

[[[description]]]
This macro increments the reference count of the given zval, and returns its new reference count. This zval must be a reference counted type (see [`IS_TYPE_REFCOUNTED`](http://phpinternals.net/docs/is_type_refcounted) for further information on refcounted types). If it is not known whether the zval is refcounted, then the [`Z_TRY_ADDREF`](http://phpinternals.net/docs/z_try_addref) macro should be used instead.

This macro also has a counterpart macro, `Z_ADDREF_P`, that accepts a pointer to a zval instead.

[[[additional_information]]]
