[[[id]]]
31781262

[[[name]]]
ZEND_USER_OPCODE

[[[url]]]
zend_user_opcode

[[[type]]]
macro

[[[declaration]]]
#define ZEND_USER_OPCODE 150

[[[parameters]]]

[[[definition]]]
ZEND_VM_HANDLER(150, ZEND_USER_OPCODE, ANY, ANY)
{
	USE_OPLINE
	int ret;

	SAVE_OPLINE();
	ret = zend_user_opcode_handlers[opline->opcode](execute_data);
	opline = EX(opline);

	switch (ret) {
		case ZEND_USER_OPCODE_CONTINUE:
			ZEND_VM_CONTINUE();
		case ZEND_USER_OPCODE_RETURN:
			if (UNEXPECTED((EX_CALL_INFO() & ZEND_CALL_GENERATOR) != 0)) {
				zend_generator *generator = zend_get_running_generator(EXECUTE_DATA_C);
				zend_generator_close(generator, 1);
				ZEND_VM_RETURN();
			} else {
				ZEND_VM_DISPATCH_TO_HELPER(zend_leave_helper);
			}
		case ZEND_USER_OPCODE_ENTER:
			ZEND_VM_ENTER();
		case ZEND_USER_OPCODE_LEAVE:
			ZEND_VM_LEAVE();
		case ZEND_USER_OPCODE_DISPATCH:
			ZEND_VM_DISPATCH(opline->opcode, opline);
		default:
			ZEND_VM_DISPATCH((zend_uchar)(ret & 0xff), opline);
	}
}

[[[source_location]]]
https://github.com/php/php-src/blob/59c5d81bab53ed3c7916cfbe163a42dab177309b/Zend/zend_vm_def.h#L7111

[[[description]]]
This opcode is used to add a custom handler on other opcodes in the VM. This is done via the [`zend_set_user_opcode_handler`](https://phpinternals.net/docs/zend_set_user_opcode_handler) function (see the [How it Works](https://phpinternals.net/docs/zend_set_user_opcode_handler#how-it-works) section for more information on this).

[[[additional_information]]]
