[[[id]]]
83079213

[[[name]]]
ZEND_BOOL_NOT

[[[url]]]
zend_bool_not

[[[type]]]
macro

[[[declaration]]]
#define ZEND_BOOL_NOT 13

[[[parameters]]]

[[[definition]]]
ZEND_VM_HANDLER(13, ZEND_BOOL_NOT, CONST|TMPVAR|CV, ANY)
{
	USE_OPLINE
	zval *val;
	zend_free_op free_op1;

	val = GET_OP1_ZVAL_PTR_UNDEF(BP_VAR_R);
	if (Z_TYPE_INFO_P(val) == IS_TRUE) {
		ZVAL_FALSE(EX_VAR(opline->result.var));
	} else if (EXPECTED(Z_TYPE_INFO_P(val) <= IS_TRUE)) {
		ZVAL_TRUE(EX_VAR(opline->result.var));
		if (OP1_TYPE == IS_CV && UNEXPECTED(Z_TYPE_INFO_P(val) == IS_UNDEF)) {
			SAVE_OPLINE();
			GET_OP1_UNDEF_CV(val, BP_VAR_R);
			ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION();
		}
	} else {
		SAVE_OPLINE();
		ZVAL_BOOL(EX_VAR(opline->result.var), !i_zend_is_true(val));
		FREE_OP1();
		ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION();
	}
	ZEND_VM_NEXT_OPCODE();
}

[[[source_location]]]
https://github.com/php/php-src/blob/31e4afe3c3654f9c5ab2eafa3a02c62d41c58b47/Zend/zend_vm_def.h#L751

[[[description]]]
This opcode is used for the boolean NOT operator.

Quick overview:
 - `op1` - left operand
 - `op2` - unused
 - `result` - boolean NOT result
 - `extended_value` - unused
 - `op1_type` - CONST|TMPVAR|CV
 - `op2_type` - ANY

[[[additional_information]]]
