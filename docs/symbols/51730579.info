[[[id]]]
51730579

[[[name]]]
zend_string_copy

[[[url]]]
zend_string_copy

[[[type]]]
function

[[[declaration]]]
static zend_always_inline zend_string *zend_string_copy(zend_string *s)

[[[parameters]]]
s
The string to make a copy of

[[[definition]]]
static zend_always_inline zend_string *zend_string_copy(zend_string *s)
{
	if (!ZSTR_IS_INTERNED(s)) {
		GC_REFCOUNT(s)++;
	}
	return s;
}

[[[source_location]]]
https://github.com/php/php-src/blob/ace9fe53173974ec63f9e0357a6e8372ff5adb3b/Zend/zend_string.h#L184

[[[description]]]
Makes a soft copy of the string (i.e. increments its reference count, rather than making a hard (actual) copy of it). If the string is interned, then it is simply returned.

[[[additional_information]]]
Taking the [hash_algos](http://php.net/hash_algos) function as an example:
```c
PHP_FUNCTION(hash_algos)
{
	zend_string *str;

	array_init(return_value);
	ZEND_HASH_FOREACH_STR_KEY(&php_hash_hashtable, str) {
		add_next_index_str(return_value, zend_string_copy(str));
	} ZEND_HASH_FOREACH_END();
}
```

The `zend_string_copy` function is used here to increment the reference counts of all strings in the `php_hash_hashtable` hash table. This is needed because these strings are being referenced from a new location (the `return_value` array), and so these additional references need to be kept track of (otherwise, premature freeing of these strings will occur, causing heap corruption issues).
