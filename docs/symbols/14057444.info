[[[id]]]
14057444

[[[name]]]
zend_hash_real_init

[[[url]]]
zend_hash_real_init

[[[type]]]
function

[[[declaration]]]
ZEND_API void ZEND_FASTCALL zend_hash_real_init(HashTable *ht, zend_bool packed)

[[[parameters]]]
ht
The allocated [`HashTable *`](https://phpinternals.net/docs/hashtable) to initialise

packed
Whether the hash table should be packed (see [`HASH_FLAG_PACKED`](https://phpinternals.net/docs/hash_flag_packed))

[[[definition]]]
ZEND_API void ZEND_FASTCALL zend_hash_real_init(HashTable *ht, zend_bool packed)
{
	IS_CONSISTENT(ht);

	HT_ASSERT_RC1(ht);
	zend_hash_real_init_ex(ht, packed);
}

static zend_always_inline void zend_hash_real_init_ex(HashTable *ht, int packed)
{
	HT_ASSERT_RC1(ht);
	ZEND_ASSERT(!((ht)->u.flags & HASH_FLAG_INITIALIZED));
	if (packed) {
		HT_SET_DATA_ADDR(ht, pemalloc(HT_SIZE(ht), (ht)->u.flags & HASH_FLAG_PERSISTENT));
		(ht)->u.flags |= HASH_FLAG_INITIALIZED | HASH_FLAG_PACKED;
		HT_HASH_RESET_PACKED(ht);
	} else {
		(ht)->nTableMask = -(ht)->nTableSize;
		HT_SET_DATA_ADDR(ht, pemalloc(HT_SIZE(ht), (ht)->u.flags & HASH_FLAG_PERSISTENT));
		(ht)->u.flags |= HASH_FLAG_INITIALIZED;
		if (EXPECTED(ht->nTableMask == (uint32_t)-8)) {
			Bucket *arData = ht->arData;

			HT_HASH_EX(arData, -8) = -1;
			HT_HASH_EX(arData, -7) = -1;
			HT_HASH_EX(arData, -6) = -1;
			HT_HASH_EX(arData, -5) = -1;
			HT_HASH_EX(arData, -4) = -1;
			HT_HASH_EX(arData, -3) = -1;
			HT_HASH_EX(arData, -2) = -1;
			HT_HASH_EX(arData, -1) = -1;
		} else {
			HT_HASH_RESET(ht);
		}
	}
}

[[[source_location]]]
https://github.com/php/php-src/blob/f18a00b8ce30d9f3f96090c63d575b5d3557d9b5/Zend/zend_hash.c#L198

[[[description]]]
Finishes initialising a [`HashTable`](https://phpinternals.net/docs/hashtable) (by allocating its buckets and setting the [`HASH_FLAG_INITIALIZED`](https://phpinternals.net/docs/hash_flag_initialised) flag). It must only be applied to an already partially initialised hash table (which can be done via [`zend_hash_init`](https://phpinternals.net/docs/zend_hash_init)).

[[[additional_information]]]
Example:
```c
HashTable *ht;

ALLOC_HASHTABLE(ht); // allocate the hash table

zend_hash_init(ht, 2, NULL, ZVAL_PTR_DTOR, 0); // initialise it

// (ht->u.flags & HASH_FLAG_INITIALIZED) == 0

zend_hash_real_init(ht, 0);

// (ht->u.flags & HASH_FLAG_INITIALIZED) != 0

// manipulate it...

zend_hash_destroy(ht); // free the buckets

FREE_HASHTABLE(ht); // free the hash table itself    
```
