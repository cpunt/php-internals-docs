[[[id]]]
27223581

[[[name]]]
ALLOC_HASHTABLE

[[[url]]]
alloc_hashtable

[[[type]]]
macro

[[[declaration]]]
#define ALLOC_HASHTABLE(ht) (ht) = (HashTable *) emalloc(sizeof(HashTable))

[[[parameters]]]
ht
The [`HashTable *`](https://phpinternals.net/docs/hashtable) variable to allocate to

[[[definition]]]

[[[source_location]]]
https://github.com/php/php-src/blob/c98714f19e6f033a7b45a24cf73fc9460cee3254/Zend/zend_alloc.h#L227

[[[description]]]
Allocates a new [`HashTable`](https://phpinternals.net/docs/hashtable) to the given variable. If the hash table needs to be allocated in [persistent memory](https://phpinternals.net/categories/zend_memory_manager#persistent-vs-non-persistent-allocations), then [`pemalloc`](https://phpinternals.net/docs/pemalloc) should be used instead.

[[[additional_information]]]
Example:
```c
HashTable *ht;

ALLOC_HASHTABLE(ht); // allocate the hash table

zend_hash_init(ht, 0, NULL, ZVAL_PTR_DTOR, 0); // initialise it

// manipulate it...

zend_hash_destroy(ht); // free the buckets

FREE_HASHTABLE(ht); // free the hash table itself
```
