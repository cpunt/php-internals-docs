[[[id]]]
44343503

[[[name]]]
ZEND_IS_NOT_IDENTICAL

[[[url]]]
zend_is_not_identical

[[[type]]]
macro

[[[declaration]]]
#define ZEND_IS_NOT_IDENTICAL 16

[[[parameters]]]

[[[definition]]]
ZEND_VM_HANDLER(16, ZEND_IS_NOT_IDENTICAL, CONST|TMP|VAR|CV, CONST|TMP|VAR|CV)
{
	USE_OPLINE
	zend_free_op free_op1, free_op2;
	zval *op1, *op2;
	int result;

	SAVE_OPLINE();
	op1 = GET_OP1_ZVAL_PTR_DEREF(BP_VAR_R);
	op2 = GET_OP2_ZVAL_PTR_DEREF(BP_VAR_R);
	result = fast_is_not_identical_function(op1, op2);
	FREE_OP1();
	FREE_OP2();
	ZEND_VM_SMART_BRANCH(result, 1);
	ZVAL_BOOL(EX_VAR(opline->result.var), result);
	ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION();
}

[[[source_location]]]
https://github.com/php/php-src/blob/31e4afe3c3654f9c5ab2eafa3a02c62d41c58b47/Zend/zend_vm_def.h#L367

[[[description]]]
This opcode is used for the not identical comparison operator.

Quick overview:
 - `op1` - left operand
 - `op2` - right operand
 - `result` - comparison result
 - `extended_value` - unused
 - `op1_type` - CONST|TMP|VAR|CV
 - `op2_type` - CONST|TMP|VAR|CV

[[[additional_information]]]
