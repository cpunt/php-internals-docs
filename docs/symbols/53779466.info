[[[id]]]
53779466

[[[name]]]
ZEND_PARSE_PARAMS_QUIET

[[[url]]]
zend_parse_params_quiet

[[[type]]]
macro

[[[declaration]]]
#define ZEND_PARSE_PARAMS_QUIET (1<<1)

[[[parameters]]]

[[[definition]]]

[[[source_location]]]
https://github.com/php/php-src/blob/86dd321c0c14497f1e72e711fbbb157f2fc9b345/Zend/zend_API.h#L276

[[[description]]]
This parameter parsing flag specifies that errors should be suppressed when failing to parse the given arguments. If the new parameter parsing API is being used, then in order to continue executing the function logic, the `ZEND_PARSE_PARAMETERS_END_EX` macro should be used (otherwise, the function will be returned from early).

See also the [`ZEND_PARSE_PARAMS_THROW`](https://phpinternals.net/docs/zend_parse_params_throw) flag.

[[[additional_information]]]
For example, if we want to attempt to parse a [`zend_long`](https://phpinternals.net/docs/zend_long) from a function, but ignore it if it fails (and simply use a default value instead), then we would do:
```c
/* argument information */
ZEND_BEGIN_ARG_INFO_EX(arginfo_parse_long, 0, 0, 1)
	ZEND_ARG_INFO(0, arg)
ZEND_END_ARG_INFO()

/* void parse_long(int $arg) */
PHP_FUNCTION(parse_long)
{
	zend_long arg = -1;

	// new API
	ZEND_PARSE_PARAMETERS_START_EX(ZEND_PARSE_PARAMS_QUIET, 1, 1)
		Z_PARAM_LONG(arg)
	ZEND_PARSE_PARAMETERS_END_EX(); // to continue with our default value

	/* old API - just ignore return value
	zend_parse_parameters_ex(ZEND_PARSE_PARAMS_QUIET, ZEND_NUM_ARGS(), "l", &arg);
	*/

	php_printf("Input: %ld\n", arg);
}
```

Executing the following PHP code:
```php
parse_long(42);
parse_long(INF);
```

Outputs:
```
Input: 42
Input: -1
```
