[[[id]]]
40661319

[[[name]]]
zend_parse_parameters_throw

[[[url]]]
zend_parse_parameters_throw

[[[type]]]
function

[[[declaration]]]
ZEND_API int zend_parse_parameters_throw(int num_args, const char *type_spec, ...)

[[[parameters]]]
num_args
The number of arguments provided by the function call. This is typically acquired by the `ZEND_NUM_ARGS` macro

type_spec
A string-literal detailing the parameter parsing of the function

...
The variables to store the parsed arguments in

[[[definition]]]
ZEND_API int zend_parse_parameters_throw(int num_args, const char *type_spec, ...)
{
	va_list va;
	int retval;
	int flags = ZEND_PARSE_PARAMS_THROW;

	va_start(va, type_spec);
	retval = zend_parse_va_args(num_args, type_spec, &va, flags);
	va_end(va);

	return retval;
}

[[[source_location]]]
https://github.com/php/php-src/blob/5b61c399fc69c7442e4b6641109456aa9a59261f/Zend/zend_API.c#L997

[[[description]]]
This is the old parameter parsing function. Upon failure to parse the arguments, a `TypeError` exception is thrown. This makes it equivalent to (but shorter than) [`zend_parse_parameters_ex`](https://phpinternals.net/docs/zend_parse_parameters_ex) and the [`ZEND_PARSE_PARAMS_THROW`](https://phpinternals.net/docs/zend_parse_params_throw) flag (see this flag for an example of this function). The newer (macro-based) API is generally preferred now because it incurs less parsing overhead.

[[[additional_information]]]
