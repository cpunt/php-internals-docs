[[[name]]]
Zend References

[[[url]]]
zend_references

[[[subcategories]]]

[[[supercategories]]]

[[[articles]]]

[[[symbols]]]
93775058
58928991
22346545
86225107
70316271
23927499
4100218

[[[body]]]
Zend references handle the PHP references we see in PHP. This is done by using reference-counted [`zval`](https://phpinternals.net/docs/zval)s of type [`IS_REFERENCE`](https://phpinternals.net/docs/is_reference), which are able to store references together that all point to the same, single value (which is another `zval`). Let's take a look at a quick example to better understand this:
```php
$a = [];    //       $a = zval_1(zend_array, refcount=1, value=[])
$b = $a;    //  $a = $b = zval_1(zend_array, refcount=2, value=[])

$c = &$a;   //       $b = zval_1(zend_array, refcount=2, value=[])
            //              ^------v (zend_reference->val=zval_1(...))
            //  $a = $c = zval_2(zend_reference, refcount=2, value=zval_1(...))

$b[] = 1;   //       $b = zval_3(zend_array, refcount=1, value=[1]) <- separation
            //            zval_1(zend_array, refcount=1, value=[])
            //              ^------v (zend_reference->val=zval_1(...))
            //  $a = $c = zval_2(zend_reference, refcount=2, value=zval_1(...))
```

We can see above that Send references are reference-counted themselves in order to group them together. This way of handling references is new to PHP 7, and is far more flexible than the way of reference handling seen in PHP 5.

The fact that references store their values at an extra level of indirection makes them a little slower to access, and requires them to be handled properly with respect to [parameter parsing](https://phpinternals.net/categories/zend_parameter_parsing) (in particular with by-reference semantics).
